'use strict';

const Manager = require('./Manager');
const Capability = require('./ManagerDevices/Capability');
const Device = require('./ManagerDevices/Device');

class ManagerDevices extends Manager {

  static CRUD = {
    ...super.CRUD,
    Capability,
    Device,
  }

  scheduleRefresh() {
    if (this.__refreshTimeout) {
      clearTimeout(this.__refreshTimeout);
    }

    if (this.__pendingRefreshDevicesCall != null) {
      return;
    }

    this.__refreshTimeout = setTimeout(() => {
      if (this.isConnected()) {
        this.__debug('Refreshing devices...');
        this.__pendingRefreshDevicesCall = this.getDevices({ $cache: false }).then(devices => {
          for (const device of Object.values(devices)) {
            device.refreshCapabilityInstances();
            this.emit('device.update', device);
          }
        }).catch(err => {
          this.__debug('Failed to refresh devices.', err);
        }).finally(() => {
          this.__pendingRefreshDevicesCall = null;
        });
      }
    }, 1000);
  }

}

module.exports = ManagerDevices;
